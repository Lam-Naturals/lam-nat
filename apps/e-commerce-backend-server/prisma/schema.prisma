datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Order {
  billingAddress  String?
  createdAt       DateTime         @default(now())
  customer        Customer?        @relation(fields: [customerId], references: [id])
  customerId      String?
  id              String           @id @default(cuid())
  orderDate       DateTime?
  orderNumber     Int?
  paymentMethod   String?
  shippingAddress String?
  status          EnumOrderStatus?
  total           Float?
  updatedAt       DateTime         @updatedAt
}

model Product {
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  createdAt   DateTime  @default(now())
  description String?
  featured    String?
  id          String    @id @default(cuid())
  images      Json?
  name        String?
  price       Float?
  quantity    Int?
  reviews     Review[]
  updatedAt   DateTime  @updatedAt
}

model Customer {
  address     String?
  createdAt   DateTime @default(now())
  email       String?
  firstName   String?
  id          String   @id @default(cuid())
  lastName    String?
  orders      Order[]
  password    String?
  phoneNumber String?
  reviews     Review[]
  updatedAt   DateTime @updatedAt
}

model Category {
  createdAt      DateTime  @default(now())
  description    String?
  id             String    @id @default(cuid())
  image          Json?
  name           String?
  parentCategory String?
  products       Product[]
  updatedAt      DateTime  @updatedAt
}

model Review {
  comment      String?
  createdAt    DateTime  @default(now())
  customer     Customer? @relation(fields: [customerId], references: [id])
  customerId   String?
  helpfulCount Int?
  id           String    @id @default(cuid())
  product      Product?  @relation(fields: [productId], references: [id])
  productId    String?
  rating       Int?
  updatedAt    DateTime  @updatedAt
}

model Admin {
  createdAt   DateTime  @default(now())
  email       String?
  firstName   String?
  id          String    @id @default(cuid())
  lastLoginAt DateTime?
  lastName    String?
  password    String?
  role        String?
  updatedAt   DateTime  @updatedAt
  username    String?
}

enum EnumOrderStatus {
  Option1
}
